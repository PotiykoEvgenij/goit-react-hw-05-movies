{"version":3,"file":"static/js/8.404db748.chunk.js","mappings":"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","sources":["components/Api.js","components/Genres.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default class MovieAPI {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  async getTrendingMovies() {\n    const url = `${this.baseURL}/trending/movie/day`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n\n  async searchMovies(query) {\n    const url = `${this.baseURL}/search/movie`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n        query: query,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n\n  async getMovieDetails(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieCredits(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/credits`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieReviews(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/reviews`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Genres = ({ genres }) => {\n    return (\n        <div>\n            {genres.map((genre, index) => (\n                <span key={index}>\n                    {genre}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nGenres.propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, Outlet, useParams } from 'react-router-dom';\nimport MovieAPI from 'components/Api';\nimport { Genres } from 'components/Genres';\n// import { AdditionalInformation } from 'components/AdditionalInformation';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [userScorePercentage, setUserScorePercentage] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieAPI = new MovieAPI('a2eec4063d87f4e8e5e4230e87b07946');\n        const details = await movieAPI.getMovieDetails(movieId);\n        const genreNames = details.genres.map((genre) => genre.name);\n        setMovieDetails(details);\n        setGenres(genreNames);\n        setUserScorePercentage(Math.round(details.vote_average * 10));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (movieId) {\n      fetchData();\n    }\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Link to={location.state?.from}>Go back</Link>\n      <img src={`https://image.tmdb.org/t/p/w185/${movieDetails.poster_path}`} alt={movieDetails.title} />\n      <h1>{movieDetails.title} ({movieDetails.release_date.slice(0, 4)})</h1>\n      <p>User score: {userScorePercentage}%</p>\n      <h2>Overview</h2>\n      <p>{movieDetails.overview}</p>\n      <h2>Genres</h2>\n      <Genres genres={genres} />\n      <h2>Additional Information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieAPI","apiKey","this","baseURL","url","config","params","api_key","language","axios","response","data","results","query","movieId","Genres","genres","map","genre","index","location","useLocation","useParams","useState","movieDetails","setMovieDetails","setGenres","userScorePercentage","setUserScorePercentage","useEffect","fetchData","movieAPI","getMovieDetails","details","genreNames","name","Math","round","vote_average","console","error","to","state","from","src","poster_path","alt","title","release_date","slice","overview"],"sourceRoot":""}