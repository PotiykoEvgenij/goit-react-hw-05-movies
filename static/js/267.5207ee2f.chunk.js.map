{"version":3,"file":"static/js/267.5207ee2f.chunk.js","mappings":"gOAEqBA,EAAAA,WACnB,WAAYC,IAAS,eACnBC,KAAKD,OAASA,EACdC,KAAKC,QAAU,8BAChB,CAsDD,OAtDC,4EAED,+FACQC,EADR,UACiBF,KAAKC,QADtB,uBAEQE,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,yBAUSA,EAASC,KAAKC,SAVvB,kGAFC,IAED,6DAaA,WAAmBC,GAAnB,kFACQT,EADR,UACiBF,KAAKC,QADtB,iBAEQE,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,QACVK,MAAOA,IANb,SAUyBJ,EAAAA,EAAAA,IAAUL,EAAKC,GAVxC,cAUQK,EAVR,yBAWSA,EAASC,KAAKC,SAXvB,mGAbA,IAaA,gEAcA,WAAsBE,GAAtB,kFACQV,EADR,UACiBF,KAAKC,QADtB,kBACuCW,GAC/BT,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,yBAUSA,EAASC,MAVlB,mGAdA,IAcA,gEAaA,WAAsBG,GAAtB,kFACQV,EADR,UACiBF,KAAKC,QADtB,kBACuCW,EADvC,YAEQT,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,SAJpB,SAQyBQ,EAAAA,EAAAA,IAAUL,EAAKC,GARxC,cAQQK,EARR,yBASSA,EAASC,MATlB,mGAbA,IAaA,gEAYA,WAAsBG,GAAtB,kFACQV,EADR,UACiBF,KAAKC,QADtB,kBACuCW,EADvC,YAEQT,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,yBAUSA,EAASC,KAAKC,SAVvB,mGAZA,MAYA,EA1DmBZ,E,2FCERe,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAKF,GAKH,wBACGA,EAAOG,KAAI,SAACC,GAAD,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAET,QAASM,EAAME,GAAIE,KAAMP,GAAnE,WACE,gBAAKQ,IAAG,0CAAqCL,EAAMM,aAAeC,IAAKP,EAAMQ,SAC7E,wBAAKR,EAAMS,qBAHNT,EAAME,GADL,MALP,IAeV,C,8ICpBYQ,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAyB,EAAfC,SAO3C,OACE,kBAAMA,SAPe,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfL,EAASI,EAAKE,OAAOP,MAAMQ,OAC9B,EAGD,WACI,kBACIC,KAAK,SACLC,KAAK,OACLV,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEQ,OAAOX,MAAzB,EACVY,aAAa,MACbC,YAAY,mBAEhB,mBAAQH,KAAK,SAAb,sBAGP,E,SCqBD,EAtCe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,gBAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAERC,EAAW,IAAIrD,EAAAA,EAAS,oCAFhB,SAGgBqD,EAASC,aAAaP,GAHtC,OAGNQ,EAHM,OAIZC,QAAQC,IAAIF,EAAc3C,SAC1BkC,EAAUS,EAAc3C,SALZ,gDAOd4C,QAAQE,MAAR,MAPc,yDAAH,qDAWXX,EACFK,IAEAN,EAAU,GAEb,GAAE,CAACC,IAEJ,IAAMY,EAAe,SAAC9C,GACpBmC,EAAenC,GACfqC,EAAgB,CAAErC,MAAAA,GACnB,EAGD,OADE2C,QAAQC,IAAIzC,IAEZ,6BACE,SAACc,EAAD,CAAWC,MAAOgB,EAAaf,SAAU2B,EAAc1B,SAAU0B,KACjE,SAAC5C,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["components/Api.js","components/MoviesList.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default class MovieAPI {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  async getTrendingMovies() {\n    const url = `${this.baseURL}/trending/movie/day`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n\n  async searchMovies(query) {\n    const url = `${this.baseURL}/search/movie`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n        query: query,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n\n  async getMovieDetails(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieCredits(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/credits`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieReviews(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/reviews`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {movies.map((movie) => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ movieId: movie.id, from: location }}>\n            <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`} alt={movie.title} />\n            <h2>{movie.original_title}</h2>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ value, onChange, onSubmit }) => {\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        onChange(form.search.value.trim());\n    };\n\n  return (\n    <form onSubmit={handleSubmit}>\n        <input\n            name=\"search\"\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesList } from \"components/MoviesList\";\nimport { SearchBox } from \"components/SearchBox\";\nimport MovieAPI from 'components/Api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieAPI = new MovieAPI('a2eec4063d87f4e8e5e4230e87b07946');\n          const searchResults = await movieAPI.searchMovies(searchQuery);\n          console.log(searchResults.results);\n          setMovies(searchResults.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (searchQuery) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [searchQuery]);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setSearchParams({ query });\n  };\n\n    console.log(movies);\n  return (\n    <main>\n      <SearchBox value={searchQuery} onChange={handleSearch} onSubmit={handleSearch} />\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["MovieAPI","apiKey","this","baseURL","url","config","params","api_key","language","axios","response","data","results","query","movieId","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","original_title","SearchBox","value","onChange","onSubmit","e","preventDefault","form","currentTarget","search","trim","name","type","target","autoComplete","placeholder","useState","setMovies","searchQuery","setSearchQuery","useSearchParams","setSearchParams","useEffect","fetchData","movieAPI","searchMovies","searchResults","console","log","error","handleSearch"],"sourceRoot":""}