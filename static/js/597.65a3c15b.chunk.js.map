{"version":3,"file":"static/js/597.65a3c15b.chunk.js","mappings":"gOAEqBA,EAAAA,WACnB,WAAYC,IAAS,eACnBC,KAAKD,OAASA,EACdC,KAAKC,QAAU,8BAChB,CAuDD,OAvDC,4EAED,+FACQC,EADR,UACiBF,KAAKC,QADtB,uBAEQE,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,OAUEC,QAAQC,IAAIF,EAASG,KAAKC,SAV5B,kBAWSJ,EAASG,KAAKC,SAXvB,kGAFC,IAED,6DAcA,WAAmBC,GAAnB,kFACQX,EADR,UACiBF,KAAKC,QADtB,iBAEQE,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,QACVO,MAAOA,IANb,SAUyBN,EAAAA,EAAAA,IAAUL,EAAKC,GAVxC,cAUQK,EAVR,yBAWSA,EAASG,KAAKC,SAXvB,mGAdA,IAcA,gEAcA,WAAsBE,GAAtB,kFACQZ,EADR,UACiBF,KAAKC,QADtB,kBACuCa,GAC/BX,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,yBAUSA,EAASG,MAVlB,mGAdA,IAcA,gEAaA,WAAsBG,GAAtB,kFACQZ,EADR,UACiBF,KAAKC,QADtB,kBACuCa,EADvC,YAEQX,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,SAJpB,SAQyBQ,EAAAA,EAAAA,IAAUL,EAAKC,GARxC,cAQQK,EARR,yBASSA,EAASG,MATlB,mGAbA,IAaA,gEAYA,WAAsBG,GAAtB,kFACQZ,EADR,UACiBF,KAAKC,QADtB,kBACuCa,EADvC,YAEQX,EAAS,CACbC,OAAQ,CACNC,QAASL,KAAKD,OACdO,SAAU,UALhB,SASyBC,EAAAA,EAAAA,IAAUL,EAAKC,GATxC,cASQK,EATR,yBAUSA,EAASG,KAAKC,SAVvB,mGAZA,MAYA,EA3DmBd,E,gGCsCrB,UApCa,SAAC,GAAiB,IAAfgB,EAAc,EAAdA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,sGAEbC,EAAW,IAAItB,EAAAA,EAAS,oCAFX,SAGAsB,EAASC,gBAAgBP,GAHzB,OAGbE,EAHa,OAInBC,EAAQD,EAAKA,MAJM,gDAMnBP,QAAQa,MAAR,MANmB,yDAAH,qDAUpBH,GACD,GAAE,CAACL,KAGF,4BACE,kCACA,wBACGE,EAAKO,KAAI,SAACC,GAAD,OACR,2BACE,gBAAKC,IAAG,0CAAqCD,EAAME,cAAgBC,IAAKH,EAAMI,QAC9E,uBAAIJ,EAAMI,SAFHJ,EAAMK,GADP,QASjB,C","sources":["components/Api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default class MovieAPI {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  async getTrendingMovies() {\n    const url = `${this.baseURL}/trending/movie/day`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    console.log(response.data.results);\n    return response.data.results;\n  }\n\n  async searchMovies(query) {\n    const url = `${this.baseURL}/search/movie`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n        query: query,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n\n  async getMovieDetails(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieCredits(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/credits`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data;\n  }\n\n  async getMovieReviews(movieId) {\n    const url = `${this.baseURL}/movie/${movieId}/reviews`;\n    const config = {\n      params: {\n        api_key: this.apiKey,\n        language: 'en-US',\n      },\n    };\n\n    const response = await axios.get(url, config);\n    return response.data.results;\n  }\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieAPI from 'components/Api';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const movieAPI = new MovieAPI('a2eec4063d87f4e8e5e4230e87b07946');\n        const cast = await movieAPI.getMovieCredits(movieId);\n        setCast(cast.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3>Cast</h3>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <img src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`} alt={actor.name} />\n            <p>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Cast;"],"names":["MovieAPI","apiKey","this","baseURL","url","config","params","api_key","language","axios","response","console","log","data","results","query","movieId","useState","cast","setCast","useEffect","fetchMovieCast","movieAPI","getMovieCredits","error","map","actor","src","profile_path","alt","name","id"],"sourceRoot":""}